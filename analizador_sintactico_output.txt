Terminals unused in grammar

   CONSTANTE_CARACTER_TOKEN


Estado 24 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 47 conflictos: 1 reducción(ones)/reducción(ones)
Estado 73 conflictos: 1 reducción(ones)/reducción(ones)


Gramática

    0 $accept: unidad_compilacion $end

    1 unidad_compilacion: lista_declaraciones_externas_opc

    2 lista_declaraciones_externas_opc: /* vacío */
    3                                 | lista_declaraciones_externas

    4 lista_declaraciones_externas: declaracion_externa
    5                             | lista_declaraciones_externas declaracion_externa

    6 declaracion_externa: definicion_funcion
    7                    | declaracion_global

    8 declaracion_global: especificador_tipo lista_init_declaradores_opc PUNTO_COMA_TOKEN

    9 lista_init_declaradores_opc: /* vacío */
   10                            | lista_init_declaradores

   11 lista_init_declaradores: init_declarador
   12                        | lista_init_declaradores COMA_TOKEN init_declarador

   13 init_declarador: declarador_con_tipo
   14                | declarador_con_tipo ASIGNACION_TOKEN expresion_asignacion

   15 declarador_con_tipo: punteros_opc IDENTIFICADOR_TOKEN
   16                    | punteros_opc IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN decl_parametros_funcion PARENTESIS_DER_TOKEN

   17 punteros_opc: /* vacío */

   18 $@1: /* vacío */

   19 punteros_opc: OPERADOR_MULTIPLICACION_TOKEN $@1 punteros_opc

   20 decl_parametros_funcion: /* vacío */
   21                        | VOID_TOKEN
   22                        | lista_real_parametros_decl

   23 lista_real_parametros_decl: param_declaracion_funcion
   24                           | lista_real_parametros_decl COMA_TOKEN param_declaracion_funcion

   25 param_declaracion_funcion: especificador_tipo declarador_con_tipo
   26                          | especificador_tipo
   27                          | PUNTOS_SUSPENSIVOS_TOKEN

   28 definicion_funcion: especificador_tipo declarador_con_tipo PARENTESIS_IZQ_TOKEN contenido_parametros_funcion PARENTESIS_DER_TOKEN cuerpo_funcion

   29 contenido_parametros_funcion: /* vacío */
   30                             | VOID_TOKEN
   31                             | lista_real_parametros

   32 especificador_tipo: VOID_TOKEN
   33                   | CHAR_TOKEN
   34                   | INT_TOKEN

   35 lista_real_parametros: param_declaracion
   36                      | lista_real_parametros COMA_TOKEN param_declaracion

   37 param_declaracion: especificador_tipo declarador_con_tipo
   38                  | especificador_tipo

   39 $@2: /* vacío */

   40 cuerpo_funcion: LLAVE_IZQ_TOKEN $@2 lista_elementos_bloque_opc LLAVE_DER_TOKEN

   41 lista_elementos_bloque_opc: /* vacío */
   42                           | lista_elementos_bloque

   43 lista_elementos_bloque: elemento_bloque
   44                       | lista_elementos_bloque elemento_bloque

   45 elemento_bloque: declaracion_global
   46                | sentencia

   47 sentencia: sentencia_expresion
   48          | sentencia_compuesta
   49          | sentencia_seleccion
   50          | sentencia_iteracion
   51          | sentencia_salto

   52 sentencia_expresion: expresion_opc PUNTO_COMA_TOKEN

   53 expresion_opc: /* vacío */
   54              | expresion

   55 sentencia_compuesta: cuerpo_funcion

   56 sentencia_seleccion: if_condition_setup sentencia

   57 $@3: /* vacío */

   58 sentencia_seleccion: if_condition_setup sentencia ELSE_TOKEN $@3 sentencia

   59 if_condition_setup: IF_TOKEN PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN

   60 sentencia_iteracion: WHILE_TOKEN PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN sentencia

   61 sentencia_salto: RETURN_TOKEN expresion_opc PUNTO_COMA_TOKEN

   62 expresion: expresion_asignacion

   63 expresion_asignacion: expresion_condicional
   64                     | primaria ASIGNACION_TOKEN expresion_asignacion

   65 expresion_condicional: expresion_logica_or

   66 expresion_logica_or: expresion_logica_and

   67 expresion_logica_and: expresion_igualdad

   68 expresion_igualdad: expresion_relacional
   69                   | expresion_igualdad COMPARACION_IGUAL_TOKEN expresion_relacional
   70                   | expresion_igualdad COMPARACION_DIFERENTE_TOKEN expresion_relacional

   71 expresion_relacional: expresion_aditiva
   72                     | expresion_relacional OPERADOR_MENOR_TOKEN expresion_aditiva
   73                     | expresion_relacional OPERADOR_MAYOR_TOKEN expresion_aditiva
   74                     | expresion_relacional OPERADOR_MENOR_IGUAL_TOKEN expresion_aditiva
   75                     | expresion_relacional OPERADOR_MAYOR_IGUAL_TOKEN expresion_aditiva

   76 expresion_aditiva: expresion_multiplicativa
   77                  | expresion_aditiva OPERADOR_SUMA_TOKEN expresion_multiplicativa
   78                  | expresion_aditiva OPERADOR_RESTA_TOKEN expresion_multiplicativa

   79 expresion_multiplicativa: expresion_unaria
   80                         | expresion_multiplicativa OPERADOR_MULTIPLICACION_TOKEN expresion_unaria
   81                         | expresion_multiplicativa OPERADOR_DIVISION_TOKEN expresion_unaria

   82 expresion_unaria: expresion_postfix
   83                 | OPERADOR_RESTA_TOKEN expresion_unaria
   84                 | OPERADOR_SUMA_TOKEN expresion_unaria

   85 expresion_postfix: primaria

   86 $@4: /* vacío */

   87 expresion_postfix: IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN $@4 lista_argumentos_opc PARENTESIS_DER_TOKEN

   88 primaria: IDENTIFICADOR_TOKEN
   89         | constante_entera_valor
   90         | string_literal
   91         | PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN

   92 constante_entera_valor: CONSTANTE_ENTERA_TOKEN

   93 string_literal: STRING_LITERAL_TOKEN

   94 lista_argumentos_opc: /* vacío */
   95                     | lista_argumentos

   96 lista_argumentos: expresion_asignacion
   97                 | lista_argumentos COMA_TOKEN expresion_asignacion


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
IDENTIFICADOR_TOKEN (258) 15 16 87 88
CONSTANTE_ENTERA_TOKEN (259) 92
CONSTANTE_CARACTER_TOKEN (260)
STRING_LITERAL_TOKEN (261) 93
INT_TOKEN (262) 34
CHAR_TOKEN (263) 33
VOID_TOKEN (264) 21 30 32
IF_TOKEN (265) 59
ELSE_TOKEN (266) 58
WHILE_TOKEN (267) 60
RETURN_TOKEN (268) 61
ASIGNACION_TOKEN (269) 14 64
OPERADOR_SUMA_TOKEN (270) 77 84
OPERADOR_RESTA_TOKEN (271) 78 83
OPERADOR_MULTIPLICACION_TOKEN (272) 19 80
OPERADOR_DIVISION_TOKEN (273) 81
COMPARACION_IGUAL_TOKEN (274) 69
COMPARACION_DIFERENTE_TOKEN (275) 70
OPERADOR_MENOR_TOKEN (276) 72
OPERADOR_MAYOR_TOKEN (277) 73
OPERADOR_MENOR_IGUAL_TOKEN (278) 74
OPERADOR_MAYOR_IGUAL_TOKEN (279) 75
PARENTESIS_IZQ_TOKEN (280) 16 28 59 60 87 91
PARENTESIS_DER_TOKEN (281) 16 28 59 60 87 91
LLAVE_IZQ_TOKEN (282) 40
LLAVE_DER_TOKEN (283) 40
PUNTO_COMA_TOKEN (284) 8 52 61
COMA_TOKEN (285) 12 24 36 97
PUNTOS_SUSPENSIVOS_TOKEN (286) 27
UNARY_MINUS_PREC (287)
IFX_NO_ELSE (288)


No terminales con las reglas donde aparecen

$accept (34)
    en la izquierda: 0
unidad_compilacion (35)
    en la izquierda: 1, en la derecha: 0
lista_declaraciones_externas_opc (36)
    en la izquierda: 2 3, en la derecha: 1
lista_declaraciones_externas (37)
    en la izquierda: 4 5, en la derecha: 3 5
declaracion_externa (38)
    en la izquierda: 6 7, en la derecha: 4 5
declaracion_global (39)
    en la izquierda: 8, en la derecha: 7 45
lista_init_declaradores_opc (40)
    en la izquierda: 9 10, en la derecha: 8
lista_init_declaradores (41)
    en la izquierda: 11 12, en la derecha: 10 12
init_declarador (42)
    en la izquierda: 13 14, en la derecha: 11 12
declarador_con_tipo (43)
    en la izquierda: 15 16, en la derecha: 13 14 25 28 37
punteros_opc (44)
    en la izquierda: 17 19, en la derecha: 15 16 19
$@1 (45)
    en la izquierda: 18, en la derecha: 19
decl_parametros_funcion (46)
    en la izquierda: 20 21 22, en la derecha: 16
lista_real_parametros_decl (47)
    en la izquierda: 23 24, en la derecha: 22 24
param_declaracion_funcion (48)
    en la izquierda: 25 26 27, en la derecha: 23 24
definicion_funcion (49)
    en la izquierda: 28, en la derecha: 6
contenido_parametros_funcion (50)
    en la izquierda: 29 30 31, en la derecha: 28
especificador_tipo (51)
    en la izquierda: 32 33 34, en la derecha: 8 25 26 28 37 38
lista_real_parametros (52)
    en la izquierda: 35 36, en la derecha: 31 36
param_declaracion (53)
    en la izquierda: 37 38, en la derecha: 35 36
cuerpo_funcion (54)
    en la izquierda: 40, en la derecha: 28 55
$@2 (55)
    en la izquierda: 39, en la derecha: 40
lista_elementos_bloque_opc (56)
    en la izquierda: 41 42, en la derecha: 40
lista_elementos_bloque (57)
    en la izquierda: 43 44, en la derecha: 42 44
elemento_bloque (58)
    en la izquierda: 45 46, en la derecha: 43 44
sentencia (59)
    en la izquierda: 47 48 49 50 51, en la derecha: 46 56 58 60
sentencia_expresion (60)
    en la izquierda: 52, en la derecha: 47
expresion_opc (61)
    en la izquierda: 53 54, en la derecha: 52 61
sentencia_compuesta (62)
    en la izquierda: 55, en la derecha: 48
sentencia_seleccion (63)
    en la izquierda: 56 58, en la derecha: 49
$@3 (64)
    en la izquierda: 57, en la derecha: 58
if_condition_setup (65)
    en la izquierda: 59, en la derecha: 56 58
sentencia_iteracion (66)
    en la izquierda: 60, en la derecha: 50
sentencia_salto (67)
    en la izquierda: 61, en la derecha: 51
expresion (68)
    en la izquierda: 62, en la derecha: 54 59 60 91
expresion_asignacion (69)
    en la izquierda: 63 64, en la derecha: 14 62 64 96 97
expresion_condicional (70)
    en la izquierda: 65, en la derecha: 63
expresion_logica_or (71)
    en la izquierda: 66, en la derecha: 65
expresion_logica_and (72)
    en la izquierda: 67, en la derecha: 66
expresion_igualdad (73)
    en la izquierda: 68 69 70, en la derecha: 67 69 70
expresion_relacional (74)
    en la izquierda: 71 72 73 74 75, en la derecha: 68 69 70 72 73
    74 75
expresion_aditiva (75)
    en la izquierda: 76 77 78, en la derecha: 71 72 73 74 75 77 78
expresion_multiplicativa (76)
    en la izquierda: 79 80 81, en la derecha: 76 77 78 80 81
expresion_unaria (77)
    en la izquierda: 82 83 84, en la derecha: 79 80 81 83 84
expresion_postfix (78)
    en la izquierda: 85 87, en la derecha: 82
$@4 (79)
    en la izquierda: 86, en la derecha: 87
primaria (80)
    en la izquierda: 88 89 90 91, en la derecha: 64 85
constante_entera_valor (81)
    en la izquierda: 92, en la derecha: 89
string_literal (82)
    en la izquierda: 93, en la derecha: 90
lista_argumentos_opc (83)
    en la izquierda: 94 95, en la derecha: 87
lista_argumentos (84)
    en la izquierda: 96 97, en la derecha: 95 97


estado 0

    0 $accept: . unidad_compilacion $end

    INT_TOKEN   desplazar e ir al estado 1
    CHAR_TOKEN  desplazar e ir al estado 2
    VOID_TOKEN  desplazar e ir al estado 3

    $default  reduce usando la regla 2 (lista_declaraciones_externas_opc)

    unidad_compilacion                ir al estado 4
    lista_declaraciones_externas_opc  ir al estado 5
    lista_declaraciones_externas      ir al estado 6
    declaracion_externa               ir al estado 7
    declaracion_global                ir al estado 8
    definicion_funcion                ir al estado 9
    especificador_tipo                ir al estado 10


estado 1

   34 especificador_tipo: INT_TOKEN .

    $default  reduce usando la regla 34 (especificador_tipo)


estado 2

   33 especificador_tipo: CHAR_TOKEN .

    $default  reduce usando la regla 33 (especificador_tipo)


estado 3

   32 especificador_tipo: VOID_TOKEN .

    $default  reduce usando la regla 32 (especificador_tipo)


estado 4

    0 $accept: unidad_compilacion . $end

    $end  desplazar e ir al estado 11


estado 5

    1 unidad_compilacion: lista_declaraciones_externas_opc .

    $default  reduce usando la regla 1 (unidad_compilacion)


estado 6

    3 lista_declaraciones_externas_opc: lista_declaraciones_externas .
    5 lista_declaraciones_externas: lista_declaraciones_externas . declaracion_externa

    INT_TOKEN   desplazar e ir al estado 1
    CHAR_TOKEN  desplazar e ir al estado 2
    VOID_TOKEN  desplazar e ir al estado 3

    $default  reduce usando la regla 3 (lista_declaraciones_externas_opc)

    declaracion_externa  ir al estado 12
    declaracion_global   ir al estado 8
    definicion_funcion   ir al estado 9
    especificador_tipo   ir al estado 10


estado 7

    4 lista_declaraciones_externas: declaracion_externa .

    $default  reduce usando la regla 4 (lista_declaraciones_externas)


estado 8

    7 declaracion_externa: declaracion_global .

    $default  reduce usando la regla 7 (declaracion_externa)


estado 9

    6 declaracion_externa: definicion_funcion .

    $default  reduce usando la regla 6 (declaracion_externa)


estado 10

    8 declaracion_global: especificador_tipo . lista_init_declaradores_opc PUNTO_COMA_TOKEN
   28 definicion_funcion: especificador_tipo . declarador_con_tipo PARENTESIS_IZQ_TOKEN contenido_parametros_funcion PARENTESIS_DER_TOKEN cuerpo_funcion

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 13

    IDENTIFICADOR_TOKEN  reduce usando la regla 17 (punteros_opc)
    $default             reduce usando la regla 9 (lista_init_declaradores_opc)

    lista_init_declaradores_opc  ir al estado 14
    lista_init_declaradores      ir al estado 15
    init_declarador              ir al estado 16
    declarador_con_tipo          ir al estado 17
    punteros_opc                 ir al estado 18


estado 11

    0 $accept: unidad_compilacion $end .

    $default  aceptar


estado 12

    5 lista_declaraciones_externas: lista_declaraciones_externas declaracion_externa .

    $default  reduce usando la regla 5 (lista_declaraciones_externas)


estado 13

   19 punteros_opc: OPERADOR_MULTIPLICACION_TOKEN . $@1 punteros_opc

    $default  reduce usando la regla 18 ($@1)

    $@1  ir al estado 19


estado 14

    8 declaracion_global: especificador_tipo lista_init_declaradores_opc . PUNTO_COMA_TOKEN

    PUNTO_COMA_TOKEN  desplazar e ir al estado 20


estado 15

   10 lista_init_declaradores_opc: lista_init_declaradores .
   12 lista_init_declaradores: lista_init_declaradores . COMA_TOKEN init_declarador

    COMA_TOKEN  desplazar e ir al estado 21

    $default  reduce usando la regla 10 (lista_init_declaradores_opc)


estado 16

   11 lista_init_declaradores: init_declarador .

    $default  reduce usando la regla 11 (lista_init_declaradores)


estado 17

   13 init_declarador: declarador_con_tipo .
   14                | declarador_con_tipo . ASIGNACION_TOKEN expresion_asignacion
   28 definicion_funcion: especificador_tipo declarador_con_tipo . PARENTESIS_IZQ_TOKEN contenido_parametros_funcion PARENTESIS_DER_TOKEN cuerpo_funcion

    ASIGNACION_TOKEN      desplazar e ir al estado 22
    PARENTESIS_IZQ_TOKEN  desplazar e ir al estado 23

    $default  reduce usando la regla 13 (init_declarador)


estado 18

   15 declarador_con_tipo: punteros_opc . IDENTIFICADOR_TOKEN
   16                    | punteros_opc . IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN decl_parametros_funcion PARENTESIS_DER_TOKEN

    IDENTIFICADOR_TOKEN  desplazar e ir al estado 24


estado 19

   19 punteros_opc: OPERADOR_MULTIPLICACION_TOKEN $@1 . punteros_opc

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 13

    $default  reduce usando la regla 17 (punteros_opc)

    punteros_opc  ir al estado 25


estado 20

    8 declaracion_global: especificador_tipo lista_init_declaradores_opc PUNTO_COMA_TOKEN .

    $default  reduce usando la regla 8 (declaracion_global)


estado 21

   12 lista_init_declaradores: lista_init_declaradores COMA_TOKEN . init_declarador

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 13

    $default  reduce usando la regla 17 (punteros_opc)

    init_declarador      ir al estado 26
    declarador_con_tipo  ir al estado 27
    punteros_opc         ir al estado 18


estado 22

   14 init_declarador: declarador_con_tipo ASIGNACION_TOKEN . expresion_asignacion

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_asignacion      ir al estado 34
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 23

   28 definicion_funcion: especificador_tipo declarador_con_tipo PARENTESIS_IZQ_TOKEN . contenido_parametros_funcion PARENTESIS_DER_TOKEN cuerpo_funcion

    INT_TOKEN   desplazar e ir al estado 1
    CHAR_TOKEN  desplazar e ir al estado 2
    VOID_TOKEN  desplazar e ir al estado 47

    $default  reduce usando la regla 29 (contenido_parametros_funcion)

    contenido_parametros_funcion  ir al estado 48
    especificador_tipo            ir al estado 49
    lista_real_parametros         ir al estado 50
    param_declaracion             ir al estado 51


estado 24

   15 declarador_con_tipo: punteros_opc IDENTIFICADOR_TOKEN .
   16                    | punteros_opc IDENTIFICADOR_TOKEN . PARENTESIS_IZQ_TOKEN decl_parametros_funcion PARENTESIS_DER_TOKEN

    PARENTESIS_IZQ_TOKEN  desplazar e ir al estado 52

    PARENTESIS_IZQ_TOKEN  [reduce usando la regla 15 (declarador_con_tipo)]
    $default              reduce usando la regla 15 (declarador_con_tipo)


estado 25

   19 punteros_opc: OPERADOR_MULTIPLICACION_TOKEN $@1 punteros_opc .

    $default  reduce usando la regla 19 (punteros_opc)


estado 26

   12 lista_init_declaradores: lista_init_declaradores COMA_TOKEN init_declarador .

    $default  reduce usando la regla 12 (lista_init_declaradores)


estado 27

   13 init_declarador: declarador_con_tipo .
   14                | declarador_con_tipo . ASIGNACION_TOKEN expresion_asignacion

    ASIGNACION_TOKEN  desplazar e ir al estado 22

    $default  reduce usando la regla 13 (init_declarador)


estado 28

   87 expresion_postfix: IDENTIFICADOR_TOKEN . PARENTESIS_IZQ_TOKEN $@4 lista_argumentos_opc PARENTESIS_DER_TOKEN
   88 primaria: IDENTIFICADOR_TOKEN .

    PARENTESIS_IZQ_TOKEN  desplazar e ir al estado 53

    $default  reduce usando la regla 88 (primaria)


estado 29

   92 constante_entera_valor: CONSTANTE_ENTERA_TOKEN .

    $default  reduce usando la regla 92 (constante_entera_valor)


estado 30

   93 string_literal: STRING_LITERAL_TOKEN .

    $default  reduce usando la regla 93 (string_literal)


estado 31

   84 expresion_unaria: OPERADOR_SUMA_TOKEN . expresion_unaria

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_unaria        ir al estado 54
    expresion_postfix       ir al estado 43
    primaria                ir al estado 55
    constante_entera_valor  ir al estado 45
    string_literal          ir al estado 46


estado 32

   83 expresion_unaria: OPERADOR_RESTA_TOKEN . expresion_unaria

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_unaria        ir al estado 56
    expresion_postfix       ir al estado 43
    primaria                ir al estado 55
    constante_entera_valor  ir al estado 45
    string_literal          ir al estado 46


estado 33

   91 primaria: PARENTESIS_IZQ_TOKEN . expresion PARENTESIS_DER_TOKEN

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion                 ir al estado 57
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 34

   14 init_declarador: declarador_con_tipo ASIGNACION_TOKEN expresion_asignacion .

    $default  reduce usando la regla 14 (init_declarador)


estado 35

   63 expresion_asignacion: expresion_condicional .

    $default  reduce usando la regla 63 (expresion_asignacion)


estado 36

   65 expresion_condicional: expresion_logica_or .

    $default  reduce usando la regla 65 (expresion_condicional)


estado 37

   66 expresion_logica_or: expresion_logica_and .

    $default  reduce usando la regla 66 (expresion_logica_or)


estado 38

   67 expresion_logica_and: expresion_igualdad .
   69 expresion_igualdad: expresion_igualdad . COMPARACION_IGUAL_TOKEN expresion_relacional
   70                   | expresion_igualdad . COMPARACION_DIFERENTE_TOKEN expresion_relacional

    COMPARACION_IGUAL_TOKEN      desplazar e ir al estado 59
    COMPARACION_DIFERENTE_TOKEN  desplazar e ir al estado 60

    $default  reduce usando la regla 67 (expresion_logica_and)


estado 39

   68 expresion_igualdad: expresion_relacional .
   72 expresion_relacional: expresion_relacional . OPERADOR_MENOR_TOKEN expresion_aditiva
   73                     | expresion_relacional . OPERADOR_MAYOR_TOKEN expresion_aditiva
   74                     | expresion_relacional . OPERADOR_MENOR_IGUAL_TOKEN expresion_aditiva
   75                     | expresion_relacional . OPERADOR_MAYOR_IGUAL_TOKEN expresion_aditiva

    OPERADOR_MENOR_TOKEN        desplazar e ir al estado 61
    OPERADOR_MAYOR_TOKEN        desplazar e ir al estado 62
    OPERADOR_MENOR_IGUAL_TOKEN  desplazar e ir al estado 63
    OPERADOR_MAYOR_IGUAL_TOKEN  desplazar e ir al estado 64

    $default  reduce usando la regla 68 (expresion_igualdad)


estado 40

   71 expresion_relacional: expresion_aditiva .
   77 expresion_aditiva: expresion_aditiva . OPERADOR_SUMA_TOKEN expresion_multiplicativa
   78                  | expresion_aditiva . OPERADOR_RESTA_TOKEN expresion_multiplicativa

    OPERADOR_SUMA_TOKEN   desplazar e ir al estado 65
    OPERADOR_RESTA_TOKEN  desplazar e ir al estado 66

    $default  reduce usando la regla 71 (expresion_relacional)


estado 41

   76 expresion_aditiva: expresion_multiplicativa .
   80 expresion_multiplicativa: expresion_multiplicativa . OPERADOR_MULTIPLICACION_TOKEN expresion_unaria
   81                         | expresion_multiplicativa . OPERADOR_DIVISION_TOKEN expresion_unaria

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 67
    OPERADOR_DIVISION_TOKEN        desplazar e ir al estado 68

    $default  reduce usando la regla 76 (expresion_aditiva)


estado 42

   79 expresion_multiplicativa: expresion_unaria .

    $default  reduce usando la regla 79 (expresion_multiplicativa)


estado 43

   82 expresion_unaria: expresion_postfix .

    $default  reduce usando la regla 82 (expresion_unaria)


estado 44

   64 expresion_asignacion: primaria . ASIGNACION_TOKEN expresion_asignacion
   85 expresion_postfix: primaria .

    ASIGNACION_TOKEN  desplazar e ir al estado 69

    $default  reduce usando la regla 85 (expresion_postfix)


estado 45

   89 primaria: constante_entera_valor .

    $default  reduce usando la regla 89 (primaria)


estado 46

   90 primaria: string_literal .

    $default  reduce usando la regla 90 (primaria)


estado 47

   30 contenido_parametros_funcion: VOID_TOKEN .
   32 especificador_tipo: VOID_TOKEN .

    PARENTESIS_DER_TOKEN  reduce usando la regla 30 (contenido_parametros_funcion)
    PARENTESIS_DER_TOKEN  [reduce usando la regla 32 (especificador_tipo)]
    $default              reduce usando la regla 32 (especificador_tipo)


estado 48

   28 definicion_funcion: especificador_tipo declarador_con_tipo PARENTESIS_IZQ_TOKEN contenido_parametros_funcion . PARENTESIS_DER_TOKEN cuerpo_funcion

    PARENTESIS_DER_TOKEN  desplazar e ir al estado 70


estado 49

   37 param_declaracion: especificador_tipo . declarador_con_tipo
   38                  | especificador_tipo .

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 13

    IDENTIFICADOR_TOKEN  reduce usando la regla 17 (punteros_opc)
    $default             reduce usando la regla 38 (param_declaracion)

    declarador_con_tipo  ir al estado 71
    punteros_opc         ir al estado 18


estado 50

   31 contenido_parametros_funcion: lista_real_parametros .
   36 lista_real_parametros: lista_real_parametros . COMA_TOKEN param_declaracion

    COMA_TOKEN  desplazar e ir al estado 72

    $default  reduce usando la regla 31 (contenido_parametros_funcion)


estado 51

   35 lista_real_parametros: param_declaracion .

    $default  reduce usando la regla 35 (lista_real_parametros)


estado 52

   16 declarador_con_tipo: punteros_opc IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN . decl_parametros_funcion PARENTESIS_DER_TOKEN

    INT_TOKEN                 desplazar e ir al estado 1
    CHAR_TOKEN                desplazar e ir al estado 2
    VOID_TOKEN                desplazar e ir al estado 73
    PUNTOS_SUSPENSIVOS_TOKEN  desplazar e ir al estado 74

    $default  reduce usando la regla 20 (decl_parametros_funcion)

    decl_parametros_funcion     ir al estado 75
    lista_real_parametros_decl  ir al estado 76
    param_declaracion_funcion   ir al estado 77
    especificador_tipo          ir al estado 78


estado 53

   87 expresion_postfix: IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN . $@4 lista_argumentos_opc PARENTESIS_DER_TOKEN

    $default  reduce usando la regla 86 ($@4)

    $@4  ir al estado 79


estado 54

   84 expresion_unaria: OPERADOR_SUMA_TOKEN expresion_unaria .

    $default  reduce usando la regla 84 (expresion_unaria)


estado 55

   85 expresion_postfix: primaria .

    $default  reduce usando la regla 85 (expresion_postfix)


estado 56

   83 expresion_unaria: OPERADOR_RESTA_TOKEN expresion_unaria .

    $default  reduce usando la regla 83 (expresion_unaria)


estado 57

   91 primaria: PARENTESIS_IZQ_TOKEN expresion . PARENTESIS_DER_TOKEN

    PARENTESIS_DER_TOKEN  desplazar e ir al estado 80


estado 58

   62 expresion: expresion_asignacion .

    $default  reduce usando la regla 62 (expresion)


estado 59

   69 expresion_igualdad: expresion_igualdad COMPARACION_IGUAL_TOKEN . expresion_relacional

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_relacional      ir al estado 81
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 60

   70 expresion_igualdad: expresion_igualdad COMPARACION_DIFERENTE_TOKEN . expresion_relacional

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_relacional      ir al estado 82
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 61

   72 expresion_relacional: expresion_relacional OPERADOR_MENOR_TOKEN . expresion_aditiva

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_aditiva         ir al estado 83
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 62

   73 expresion_relacional: expresion_relacional OPERADOR_MAYOR_TOKEN . expresion_aditiva

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_aditiva         ir al estado 84
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 63

   74 expresion_relacional: expresion_relacional OPERADOR_MENOR_IGUAL_TOKEN . expresion_aditiva

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_aditiva         ir al estado 85
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 64

   75 expresion_relacional: expresion_relacional OPERADOR_MAYOR_IGUAL_TOKEN . expresion_aditiva

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_aditiva         ir al estado 86
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 65

   77 expresion_aditiva: expresion_aditiva OPERADOR_SUMA_TOKEN . expresion_multiplicativa

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_multiplicativa  ir al estado 87
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 66

   78 expresion_aditiva: expresion_aditiva OPERADOR_RESTA_TOKEN . expresion_multiplicativa

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_multiplicativa  ir al estado 88
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 55
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 67

   80 expresion_multiplicativa: expresion_multiplicativa OPERADOR_MULTIPLICACION_TOKEN . expresion_unaria

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_unaria        ir al estado 89
    expresion_postfix       ir al estado 43
    primaria                ir al estado 55
    constante_entera_valor  ir al estado 45
    string_literal          ir al estado 46


estado 68

   81 expresion_multiplicativa: expresion_multiplicativa OPERADOR_DIVISION_TOKEN . expresion_unaria

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_unaria        ir al estado 90
    expresion_postfix       ir al estado 43
    primaria                ir al estado 55
    constante_entera_valor  ir al estado 45
    string_literal          ir al estado 46


estado 69

   64 expresion_asignacion: primaria ASIGNACION_TOKEN . expresion_asignacion

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_asignacion      ir al estado 91
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 70

   28 definicion_funcion: especificador_tipo declarador_con_tipo PARENTESIS_IZQ_TOKEN contenido_parametros_funcion PARENTESIS_DER_TOKEN . cuerpo_funcion

    LLAVE_IZQ_TOKEN  desplazar e ir al estado 92

    cuerpo_funcion  ir al estado 93


estado 71

   37 param_declaracion: especificador_tipo declarador_con_tipo .

    $default  reduce usando la regla 37 (param_declaracion)


estado 72

   36 lista_real_parametros: lista_real_parametros COMA_TOKEN . param_declaracion

    INT_TOKEN   desplazar e ir al estado 1
    CHAR_TOKEN  desplazar e ir al estado 2
    VOID_TOKEN  desplazar e ir al estado 3

    especificador_tipo  ir al estado 49
    param_declaracion   ir al estado 94


estado 73

   21 decl_parametros_funcion: VOID_TOKEN .
   32 especificador_tipo: VOID_TOKEN .

    PARENTESIS_DER_TOKEN  reduce usando la regla 21 (decl_parametros_funcion)
    PARENTESIS_DER_TOKEN  [reduce usando la regla 32 (especificador_tipo)]
    $default              reduce usando la regla 32 (especificador_tipo)


estado 74

   27 param_declaracion_funcion: PUNTOS_SUSPENSIVOS_TOKEN .

    $default  reduce usando la regla 27 (param_declaracion_funcion)


estado 75

   16 declarador_con_tipo: punteros_opc IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN decl_parametros_funcion . PARENTESIS_DER_TOKEN

    PARENTESIS_DER_TOKEN  desplazar e ir al estado 95


estado 76

   22 decl_parametros_funcion: lista_real_parametros_decl .
   24 lista_real_parametros_decl: lista_real_parametros_decl . COMA_TOKEN param_declaracion_funcion

    COMA_TOKEN  desplazar e ir al estado 96

    $default  reduce usando la regla 22 (decl_parametros_funcion)


estado 77

   23 lista_real_parametros_decl: param_declaracion_funcion .

    $default  reduce usando la regla 23 (lista_real_parametros_decl)


estado 78

   25 param_declaracion_funcion: especificador_tipo . declarador_con_tipo
   26                          | especificador_tipo .

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 13

    IDENTIFICADOR_TOKEN  reduce usando la regla 17 (punteros_opc)
    $default             reduce usando la regla 26 (param_declaracion_funcion)

    declarador_con_tipo  ir al estado 97
    punteros_opc         ir al estado 18


estado 79

   87 expresion_postfix: IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN $@4 . lista_argumentos_opc PARENTESIS_DER_TOKEN

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    $default  reduce usando la regla 94 (lista_argumentos_opc)

    expresion_asignacion      ir al estado 98
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46
    lista_argumentos_opc      ir al estado 99
    lista_argumentos          ir al estado 100


estado 80

   91 primaria: PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN .

    $default  reduce usando la regla 91 (primaria)


estado 81

   69 expresion_igualdad: expresion_igualdad COMPARACION_IGUAL_TOKEN expresion_relacional .
   72 expresion_relacional: expresion_relacional . OPERADOR_MENOR_TOKEN expresion_aditiva
   73                     | expresion_relacional . OPERADOR_MAYOR_TOKEN expresion_aditiva
   74                     | expresion_relacional . OPERADOR_MENOR_IGUAL_TOKEN expresion_aditiva
   75                     | expresion_relacional . OPERADOR_MAYOR_IGUAL_TOKEN expresion_aditiva

    OPERADOR_MENOR_TOKEN        desplazar e ir al estado 61
    OPERADOR_MAYOR_TOKEN        desplazar e ir al estado 62
    OPERADOR_MENOR_IGUAL_TOKEN  desplazar e ir al estado 63
    OPERADOR_MAYOR_IGUAL_TOKEN  desplazar e ir al estado 64

    $default  reduce usando la regla 69 (expresion_igualdad)


estado 82

   70 expresion_igualdad: expresion_igualdad COMPARACION_DIFERENTE_TOKEN expresion_relacional .
   72 expresion_relacional: expresion_relacional . OPERADOR_MENOR_TOKEN expresion_aditiva
   73                     | expresion_relacional . OPERADOR_MAYOR_TOKEN expresion_aditiva
   74                     | expresion_relacional . OPERADOR_MENOR_IGUAL_TOKEN expresion_aditiva
   75                     | expresion_relacional . OPERADOR_MAYOR_IGUAL_TOKEN expresion_aditiva

    OPERADOR_MENOR_TOKEN        desplazar e ir al estado 61
    OPERADOR_MAYOR_TOKEN        desplazar e ir al estado 62
    OPERADOR_MENOR_IGUAL_TOKEN  desplazar e ir al estado 63
    OPERADOR_MAYOR_IGUAL_TOKEN  desplazar e ir al estado 64

    $default  reduce usando la regla 70 (expresion_igualdad)


estado 83

   72 expresion_relacional: expresion_relacional OPERADOR_MENOR_TOKEN expresion_aditiva .
   77 expresion_aditiva: expresion_aditiva . OPERADOR_SUMA_TOKEN expresion_multiplicativa
   78                  | expresion_aditiva . OPERADOR_RESTA_TOKEN expresion_multiplicativa

    OPERADOR_SUMA_TOKEN   desplazar e ir al estado 65
    OPERADOR_RESTA_TOKEN  desplazar e ir al estado 66

    $default  reduce usando la regla 72 (expresion_relacional)


estado 84

   73 expresion_relacional: expresion_relacional OPERADOR_MAYOR_TOKEN expresion_aditiva .
   77 expresion_aditiva: expresion_aditiva . OPERADOR_SUMA_TOKEN expresion_multiplicativa
   78                  | expresion_aditiva . OPERADOR_RESTA_TOKEN expresion_multiplicativa

    OPERADOR_SUMA_TOKEN   desplazar e ir al estado 65
    OPERADOR_RESTA_TOKEN  desplazar e ir al estado 66

    $default  reduce usando la regla 73 (expresion_relacional)


estado 85

   74 expresion_relacional: expresion_relacional OPERADOR_MENOR_IGUAL_TOKEN expresion_aditiva .
   77 expresion_aditiva: expresion_aditiva . OPERADOR_SUMA_TOKEN expresion_multiplicativa
   78                  | expresion_aditiva . OPERADOR_RESTA_TOKEN expresion_multiplicativa

    OPERADOR_SUMA_TOKEN   desplazar e ir al estado 65
    OPERADOR_RESTA_TOKEN  desplazar e ir al estado 66

    $default  reduce usando la regla 74 (expresion_relacional)


estado 86

   75 expresion_relacional: expresion_relacional OPERADOR_MAYOR_IGUAL_TOKEN expresion_aditiva .
   77 expresion_aditiva: expresion_aditiva . OPERADOR_SUMA_TOKEN expresion_multiplicativa
   78                  | expresion_aditiva . OPERADOR_RESTA_TOKEN expresion_multiplicativa

    OPERADOR_SUMA_TOKEN   desplazar e ir al estado 65
    OPERADOR_RESTA_TOKEN  desplazar e ir al estado 66

    $default  reduce usando la regla 75 (expresion_relacional)


estado 87

   77 expresion_aditiva: expresion_aditiva OPERADOR_SUMA_TOKEN expresion_multiplicativa .
   80 expresion_multiplicativa: expresion_multiplicativa . OPERADOR_MULTIPLICACION_TOKEN expresion_unaria
   81                         | expresion_multiplicativa . OPERADOR_DIVISION_TOKEN expresion_unaria

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 67
    OPERADOR_DIVISION_TOKEN        desplazar e ir al estado 68

    $default  reduce usando la regla 77 (expresion_aditiva)


estado 88

   78 expresion_aditiva: expresion_aditiva OPERADOR_RESTA_TOKEN expresion_multiplicativa .
   80 expresion_multiplicativa: expresion_multiplicativa . OPERADOR_MULTIPLICACION_TOKEN expresion_unaria
   81                         | expresion_multiplicativa . OPERADOR_DIVISION_TOKEN expresion_unaria

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 67
    OPERADOR_DIVISION_TOKEN        desplazar e ir al estado 68

    $default  reduce usando la regla 78 (expresion_aditiva)


estado 89

   80 expresion_multiplicativa: expresion_multiplicativa OPERADOR_MULTIPLICACION_TOKEN expresion_unaria .

    $default  reduce usando la regla 80 (expresion_multiplicativa)


estado 90

   81 expresion_multiplicativa: expresion_multiplicativa OPERADOR_DIVISION_TOKEN expresion_unaria .

    $default  reduce usando la regla 81 (expresion_multiplicativa)


estado 91

   64 expresion_asignacion: primaria ASIGNACION_TOKEN expresion_asignacion .

    $default  reduce usando la regla 64 (expresion_asignacion)


estado 92

   40 cuerpo_funcion: LLAVE_IZQ_TOKEN . $@2 lista_elementos_bloque_opc LLAVE_DER_TOKEN

    $default  reduce usando la regla 39 ($@2)

    $@2  ir al estado 101


estado 93

   28 definicion_funcion: especificador_tipo declarador_con_tipo PARENTESIS_IZQ_TOKEN contenido_parametros_funcion PARENTESIS_DER_TOKEN cuerpo_funcion .

    $default  reduce usando la regla 28 (definicion_funcion)


estado 94

   36 lista_real_parametros: lista_real_parametros COMA_TOKEN param_declaracion .

    $default  reduce usando la regla 36 (lista_real_parametros)


estado 95

   16 declarador_con_tipo: punteros_opc IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN decl_parametros_funcion PARENTESIS_DER_TOKEN .

    $default  reduce usando la regla 16 (declarador_con_tipo)


estado 96

   24 lista_real_parametros_decl: lista_real_parametros_decl COMA_TOKEN . param_declaracion_funcion

    INT_TOKEN                 desplazar e ir al estado 1
    CHAR_TOKEN                desplazar e ir al estado 2
    VOID_TOKEN                desplazar e ir al estado 3
    PUNTOS_SUSPENSIVOS_TOKEN  desplazar e ir al estado 74

    param_declaracion_funcion  ir al estado 102
    especificador_tipo         ir al estado 78


estado 97

   25 param_declaracion_funcion: especificador_tipo declarador_con_tipo .

    $default  reduce usando la regla 25 (param_declaracion_funcion)


estado 98

   96 lista_argumentos: expresion_asignacion .

    $default  reduce usando la regla 96 (lista_argumentos)


estado 99

   87 expresion_postfix: IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN $@4 lista_argumentos_opc . PARENTESIS_DER_TOKEN

    PARENTESIS_DER_TOKEN  desplazar e ir al estado 103


estado 100

   95 lista_argumentos_opc: lista_argumentos .
   97 lista_argumentos: lista_argumentos . COMA_TOKEN expresion_asignacion

    COMA_TOKEN  desplazar e ir al estado 104

    $default  reduce usando la regla 95 (lista_argumentos_opc)


estado 101

   40 cuerpo_funcion: LLAVE_IZQ_TOKEN $@2 . lista_elementos_bloque_opc LLAVE_DER_TOKEN

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    INT_TOKEN               desplazar e ir al estado 1
    CHAR_TOKEN              desplazar e ir al estado 2
    VOID_TOKEN              desplazar e ir al estado 3
    IF_TOKEN                desplazar e ir al estado 105
    WHILE_TOKEN             desplazar e ir al estado 106
    RETURN_TOKEN            desplazar e ir al estado 107
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33
    LLAVE_IZQ_TOKEN         desplazar e ir al estado 92

    PUNTO_COMA_TOKEN  reduce usando la regla 53 (expresion_opc)
    $default          reduce usando la regla 41 (lista_elementos_bloque_opc)

    declaracion_global          ir al estado 108
    especificador_tipo          ir al estado 109
    cuerpo_funcion              ir al estado 110
    lista_elementos_bloque_opc  ir al estado 111
    lista_elementos_bloque      ir al estado 112
    elemento_bloque             ir al estado 113
    sentencia                   ir al estado 114
    sentencia_expresion         ir al estado 115
    expresion_opc               ir al estado 116
    sentencia_compuesta         ir al estado 117
    sentencia_seleccion         ir al estado 118
    if_condition_setup          ir al estado 119
    sentencia_iteracion         ir al estado 120
    sentencia_salto             ir al estado 121
    expresion                   ir al estado 122
    expresion_asignacion        ir al estado 58
    expresion_condicional       ir al estado 35
    expresion_logica_or         ir al estado 36
    expresion_logica_and        ir al estado 37
    expresion_igualdad          ir al estado 38
    expresion_relacional        ir al estado 39
    expresion_aditiva           ir al estado 40
    expresion_multiplicativa    ir al estado 41
    expresion_unaria            ir al estado 42
    expresion_postfix           ir al estado 43
    primaria                    ir al estado 44
    constante_entera_valor      ir al estado 45
    string_literal              ir al estado 46


estado 102

   24 lista_real_parametros_decl: lista_real_parametros_decl COMA_TOKEN param_declaracion_funcion .

    $default  reduce usando la regla 24 (lista_real_parametros_decl)


estado 103

   87 expresion_postfix: IDENTIFICADOR_TOKEN PARENTESIS_IZQ_TOKEN $@4 lista_argumentos_opc PARENTESIS_DER_TOKEN .

    $default  reduce usando la regla 87 (expresion_postfix)


estado 104

   97 lista_argumentos: lista_argumentos COMA_TOKEN . expresion_asignacion

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion_asignacion      ir al estado 123
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 105

   59 if_condition_setup: IF_TOKEN . PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN

    PARENTESIS_IZQ_TOKEN  desplazar e ir al estado 124


estado 106

   60 sentencia_iteracion: WHILE_TOKEN . PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN sentencia

    PARENTESIS_IZQ_TOKEN  desplazar e ir al estado 125


estado 107

   61 sentencia_salto: RETURN_TOKEN . expresion_opc PUNTO_COMA_TOKEN

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    $default  reduce usando la regla 53 (expresion_opc)

    expresion_opc             ir al estado 126
    expresion                 ir al estado 122
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 108

   45 elemento_bloque: declaracion_global .

    $default  reduce usando la regla 45 (elemento_bloque)


estado 109

    8 declaracion_global: especificador_tipo . lista_init_declaradores_opc PUNTO_COMA_TOKEN

    OPERADOR_MULTIPLICACION_TOKEN  desplazar e ir al estado 13

    IDENTIFICADOR_TOKEN  reduce usando la regla 17 (punteros_opc)
    $default             reduce usando la regla 9 (lista_init_declaradores_opc)

    lista_init_declaradores_opc  ir al estado 14
    lista_init_declaradores      ir al estado 15
    init_declarador              ir al estado 16
    declarador_con_tipo          ir al estado 27
    punteros_opc                 ir al estado 18


estado 110

   55 sentencia_compuesta: cuerpo_funcion .

    $default  reduce usando la regla 55 (sentencia_compuesta)


estado 111

   40 cuerpo_funcion: LLAVE_IZQ_TOKEN $@2 lista_elementos_bloque_opc . LLAVE_DER_TOKEN

    LLAVE_DER_TOKEN  desplazar e ir al estado 127


estado 112

   42 lista_elementos_bloque_opc: lista_elementos_bloque .
   44 lista_elementos_bloque: lista_elementos_bloque . elemento_bloque

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    INT_TOKEN               desplazar e ir al estado 1
    CHAR_TOKEN              desplazar e ir al estado 2
    VOID_TOKEN              desplazar e ir al estado 3
    IF_TOKEN                desplazar e ir al estado 105
    WHILE_TOKEN             desplazar e ir al estado 106
    RETURN_TOKEN            desplazar e ir al estado 107
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33
    LLAVE_IZQ_TOKEN         desplazar e ir al estado 92

    PUNTO_COMA_TOKEN  reduce usando la regla 53 (expresion_opc)
    $default          reduce usando la regla 42 (lista_elementos_bloque_opc)

    declaracion_global        ir al estado 108
    especificador_tipo        ir al estado 109
    cuerpo_funcion            ir al estado 110
    elemento_bloque           ir al estado 128
    sentencia                 ir al estado 114
    sentencia_expresion       ir al estado 115
    expresion_opc             ir al estado 116
    sentencia_compuesta       ir al estado 117
    sentencia_seleccion       ir al estado 118
    if_condition_setup        ir al estado 119
    sentencia_iteracion       ir al estado 120
    sentencia_salto           ir al estado 121
    expresion                 ir al estado 122
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 113

   43 lista_elementos_bloque: elemento_bloque .

    $default  reduce usando la regla 43 (lista_elementos_bloque)


estado 114

   46 elemento_bloque: sentencia .

    $default  reduce usando la regla 46 (elemento_bloque)


estado 115

   47 sentencia: sentencia_expresion .

    $default  reduce usando la regla 47 (sentencia)


estado 116

   52 sentencia_expresion: expresion_opc . PUNTO_COMA_TOKEN

    PUNTO_COMA_TOKEN  desplazar e ir al estado 129


estado 117

   48 sentencia: sentencia_compuesta .

    $default  reduce usando la regla 48 (sentencia)


estado 118

   49 sentencia: sentencia_seleccion .

    $default  reduce usando la regla 49 (sentencia)


estado 119

   56 sentencia_seleccion: if_condition_setup . sentencia
   58                    | if_condition_setup . sentencia ELSE_TOKEN $@3 sentencia

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    IF_TOKEN                desplazar e ir al estado 105
    WHILE_TOKEN             desplazar e ir al estado 106
    RETURN_TOKEN            desplazar e ir al estado 107
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33
    LLAVE_IZQ_TOKEN         desplazar e ir al estado 92

    $default  reduce usando la regla 53 (expresion_opc)

    cuerpo_funcion            ir al estado 110
    sentencia                 ir al estado 130
    sentencia_expresion       ir al estado 115
    expresion_opc             ir al estado 116
    sentencia_compuesta       ir al estado 117
    sentencia_seleccion       ir al estado 118
    if_condition_setup        ir al estado 119
    sentencia_iteracion       ir al estado 120
    sentencia_salto           ir al estado 121
    expresion                 ir al estado 122
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 120

   50 sentencia: sentencia_iteracion .

    $default  reduce usando la regla 50 (sentencia)


estado 121

   51 sentencia: sentencia_salto .

    $default  reduce usando la regla 51 (sentencia)


estado 122

   54 expresion_opc: expresion .

    $default  reduce usando la regla 54 (expresion_opc)


estado 123

   97 lista_argumentos: lista_argumentos COMA_TOKEN expresion_asignacion .

    $default  reduce usando la regla 97 (lista_argumentos)


estado 124

   59 if_condition_setup: IF_TOKEN PARENTESIS_IZQ_TOKEN . expresion PARENTESIS_DER_TOKEN

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion                 ir al estado 131
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 125

   60 sentencia_iteracion: WHILE_TOKEN PARENTESIS_IZQ_TOKEN . expresion PARENTESIS_DER_TOKEN sentencia

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33

    expresion                 ir al estado 132
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 126

   61 sentencia_salto: RETURN_TOKEN expresion_opc . PUNTO_COMA_TOKEN

    PUNTO_COMA_TOKEN  desplazar e ir al estado 133


estado 127

   40 cuerpo_funcion: LLAVE_IZQ_TOKEN $@2 lista_elementos_bloque_opc LLAVE_DER_TOKEN .

    $default  reduce usando la regla 40 (cuerpo_funcion)


estado 128

   44 lista_elementos_bloque: lista_elementos_bloque elemento_bloque .

    $default  reduce usando la regla 44 (lista_elementos_bloque)


estado 129

   52 sentencia_expresion: expresion_opc PUNTO_COMA_TOKEN .

    $default  reduce usando la regla 52 (sentencia_expresion)


estado 130

   56 sentencia_seleccion: if_condition_setup sentencia .
   58                    | if_condition_setup sentencia . ELSE_TOKEN $@3 sentencia

    ELSE_TOKEN  desplazar e ir al estado 134

    $default  reduce usando la regla 56 (sentencia_seleccion)


estado 131

   59 if_condition_setup: IF_TOKEN PARENTESIS_IZQ_TOKEN expresion . PARENTESIS_DER_TOKEN

    PARENTESIS_DER_TOKEN  desplazar e ir al estado 135


estado 132

   60 sentencia_iteracion: WHILE_TOKEN PARENTESIS_IZQ_TOKEN expresion . PARENTESIS_DER_TOKEN sentencia

    PARENTESIS_DER_TOKEN  desplazar e ir al estado 136


estado 133

   61 sentencia_salto: RETURN_TOKEN expresion_opc PUNTO_COMA_TOKEN .

    $default  reduce usando la regla 61 (sentencia_salto)


estado 134

   58 sentencia_seleccion: if_condition_setup sentencia ELSE_TOKEN . $@3 sentencia

    $default  reduce usando la regla 57 ($@3)

    $@3  ir al estado 137


estado 135

   59 if_condition_setup: IF_TOKEN PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN .

    $default  reduce usando la regla 59 (if_condition_setup)


estado 136

   60 sentencia_iteracion: WHILE_TOKEN PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN . sentencia

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    IF_TOKEN                desplazar e ir al estado 105
    WHILE_TOKEN             desplazar e ir al estado 106
    RETURN_TOKEN            desplazar e ir al estado 107
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33
    LLAVE_IZQ_TOKEN         desplazar e ir al estado 92

    $default  reduce usando la regla 53 (expresion_opc)

    cuerpo_funcion            ir al estado 110
    sentencia                 ir al estado 138
    sentencia_expresion       ir al estado 115
    expresion_opc             ir al estado 116
    sentencia_compuesta       ir al estado 117
    sentencia_seleccion       ir al estado 118
    if_condition_setup        ir al estado 119
    sentencia_iteracion       ir al estado 120
    sentencia_salto           ir al estado 121
    expresion                 ir al estado 122
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 137

   58 sentencia_seleccion: if_condition_setup sentencia ELSE_TOKEN $@3 . sentencia

    IDENTIFICADOR_TOKEN     desplazar e ir al estado 28
    CONSTANTE_ENTERA_TOKEN  desplazar e ir al estado 29
    STRING_LITERAL_TOKEN    desplazar e ir al estado 30
    IF_TOKEN                desplazar e ir al estado 105
    WHILE_TOKEN             desplazar e ir al estado 106
    RETURN_TOKEN            desplazar e ir al estado 107
    OPERADOR_SUMA_TOKEN     desplazar e ir al estado 31
    OPERADOR_RESTA_TOKEN    desplazar e ir al estado 32
    PARENTESIS_IZQ_TOKEN    desplazar e ir al estado 33
    LLAVE_IZQ_TOKEN         desplazar e ir al estado 92

    $default  reduce usando la regla 53 (expresion_opc)

    cuerpo_funcion            ir al estado 110
    sentencia                 ir al estado 139
    sentencia_expresion       ir al estado 115
    expresion_opc             ir al estado 116
    sentencia_compuesta       ir al estado 117
    sentencia_seleccion       ir al estado 118
    if_condition_setup        ir al estado 119
    sentencia_iteracion       ir al estado 120
    sentencia_salto           ir al estado 121
    expresion                 ir al estado 122
    expresion_asignacion      ir al estado 58
    expresion_condicional     ir al estado 35
    expresion_logica_or       ir al estado 36
    expresion_logica_and      ir al estado 37
    expresion_igualdad        ir al estado 38
    expresion_relacional      ir al estado 39
    expresion_aditiva         ir al estado 40
    expresion_multiplicativa  ir al estado 41
    expresion_unaria          ir al estado 42
    expresion_postfix         ir al estado 43
    primaria                  ir al estado 44
    constante_entera_valor    ir al estado 45
    string_literal            ir al estado 46


estado 138

   60 sentencia_iteracion: WHILE_TOKEN PARENTESIS_IZQ_TOKEN expresion PARENTESIS_DER_TOKEN sentencia .

    $default  reduce usando la regla 60 (sentencia_iteracion)


estado 139

   58 sentencia_seleccion: if_condition_setup sentencia ELSE_TOKEN $@3 sentencia .

    $default  reduce usando la regla 58 (sentencia_seleccion)
